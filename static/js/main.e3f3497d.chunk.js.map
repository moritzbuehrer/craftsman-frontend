{"version":3,"sources":["images/project_image.jpg","reducers/customer.js","constants/actionTypes.js","reducers/project.js","reducers/index.js","store/index.js","components/SiderMenu.js","components/AppHeader.js","actions/customer.js","components/GoogleMapContainer/GoogleMapContainer.js","components/CustomerGeneralInfo.js/CustomerGeneralInfo.js","pages/Customer/Customer.js","components/ProjectGeneralInfo.js","components/ProjectImages.js","components/TimeTrackModal/TimeTrackModal.js","actions/project.js","pages/Project/Project.js","pages/Project/ProjectList.js","pages/Dashboard.js","pages/Customer/CustomerList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","currentCustomer","id","name","firstName","phone","email","street","postcode","city","country","customers","loading","error","changeMode","customer","state","action","type","lastName","phoneNumber","currentProject","externalId","description","customerId","totalWorkingHours","timeTracks","projects","age","address","status","project","concat","workingTime","parseInt","combineReducers","createStore","rootReducer","applyMiddleware","thunk","Title","Typography","SiderMenu","className","to","level","theme","defaultSelectedKeys","defaultOpenKeys","Item","key","React","Component","AppHeader","size","icon","UserOutlined","setCurrentCustomer","mapStyles","width","height","GoogleMapContainer","google","this","props","zoom","style","initialCenter","lat","lng","GoogleApiWrapper","apiKey","ProjectGeneralInfo","display","span","connect","TabPane","Tabs","columns","title","dataIndex","render","text","data","Customer","onListItemClick","dispatch","onChangButtonClick","onBack","window","history","back","subTitle","padding","defaultActiveKey","tab","CustomerGeneralInfo","dataSource","Text","strong","Dragger","Upload","multiple","onChange","info","file","console","log","fileList","message","success","ProjectImages","InboxOutlined","setWorkingTime","TextArea","Input","options","value","layout","labelCol","wrapperCol","tailLayout","offset","Project","visible","showModal","setState","handleOk","formValues","timeTrack","employee","Duration","note","handleCancel","e","match","params","onCancel","footer","destroyOnClose","onFinish","onFinishFailed","preserve","label","rules","required","placeholder","filterOption","inputValue","option","toUpperCase","indexOf","min","htmlType","onClick","tags","color","extra","src","projectImage","alt","column","suffix","rows","record","index","ProjectList","Dashboard","margin","textAlign","CustomerList","Header","Layout","Footer","Sider","Content","App","store","exact","path","component","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e3f3497d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/project_image.9d8a7c9c.jpg\";","\r\nimport { FETCH_CUSTOMERS_START, FETCH_CUSTOMERS_SUCCESS, FETCH_CUSTOMERS_ERROR, SET_CURRENT_CUSTOMER, TOGGLE_CUSTOMER_CHANGE } from './../constants/actionTypes';\r\n\r\nconst initialState = {\r\n    currentCustomer: {\r\n        id: '1',\r\n        name: 'Bau GmbH',\r\n        firstName: '',\r\n        phone: '018863648176',\r\n        email: 'test@web.de',\r\n        street: 'Test Ave. 8',\r\n        postcode: '87967',\r\n        city: 'Hamburg',\r\n        country: 'DE'\r\n    },\r\n    customers: [\r\n        {\r\n            id: '1',\r\n            name: 'Bau GmbH',\r\n            firstName: '',\r\n            phone: '018863648176',\r\n            email: 'test@web.de',\r\n            street: 'Test Ave. 8',\r\n            postcode: '87967',\r\n            city: 'Hamburg',\r\n            country: 'DE'\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Maler GmbH',\r\n            firstName: '',\r\n            phone: '018863648176',\r\n            email: 'test@web.de',\r\n            street: 'Berlin Ave. 8',\r\n            postcode: '87967',\r\n            city: 'Berlin',\r\n            country: 'DE'\r\n        },\r\n        {\r\n            id: '3',\r\n            name: 'Müller',\r\n            firstName: 'Thomas',\r\n            phone: '018863648176',\r\n            email: 'test@web.de',\r\n            street: 'Freibrug Ave. 8',\r\n            postcode: '87967',\r\n            city: 'Freibrug',\r\n            country: 'DE'\r\n        }\r\n    ],\r\n    loading: false,\r\n    error: null,\r\n    changeMode: false\r\n};\r\n\r\nfunction customer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case FETCH_CUSTOMERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CUSTOMERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                customers: action.customers\r\n            }\r\n        case FETCH_CUSTOMERS_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case SET_CURRENT_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                currentCustomer: {\r\n                    id: action.customer.id,\r\n                    firstName: action.customer.firstName,\r\n                    lastName: action.customer.name,\r\n                    phoneNumber: action.customer.phoneNumber,\r\n                    email: action.customer.email\r\n                }\r\n            }\r\n        case TOGGLE_CUSTOMER_CHANGE:\r\n            return {\r\n                ...state,\r\n                changeMode: !state.changeMode\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default customer;","export const FETCH_CUSTOMERS_START = 'FETCH_CUSTOMERS_START';\r\nexport const FETCH_CUSTOMERS_SUCCESS = 'FETCH_CUSTOMERS_SUCCESS';\r\nexport const FETCH_CUSTOMERS_ERROR = 'FETCH_CUSTOMERS_ERROR';\r\nexport const SET_CURRENT_CUSTOMER = 'SET_CURRENT_CUSTOMER';\r\nexport const TOGGLE_CUSTOMER_CHANGE = 'TOGGLE_CUSTOMER_CHANGE';\r\n\r\nexport const SET_PROJECT_WORKING_TIME = 'SET_PROJECT_WORKING_TIME';\r\n\r\n","import { SET_PROJECT_WORKING_TIME } from \"../constants/actionTypes\";\r\n\r\nconst initialState = {\r\n    currentProject: {\r\n        id: \"2020-03-0001\",\r\n        externalId: \"987654321\",\r\n        name: \"Kernsanierung\",\r\n        description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\",\r\n        customerId: \"1\",\r\n        totalWorkingHours: 0,\r\n        timeTracks: []\r\n    },\r\n    projects: [\r\n        {\r\n            id: '1',\r\n            name: 'Project 1',\r\n            age: 'Test GmbH',\r\n            address: 'New York No. 1 Lake Park',\r\n            status: 'In Progress'\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Project 2',\r\n            age: 'Test GmbH',\r\n            address: 'London No. 1 Lake Park',\r\n            status: 'In Progress'\r\n        },\r\n        {\r\n            id: '3',\r\n            name: 'Project 4',\r\n            age: 'Test GmbH',\r\n            address: 'Sidney No. 1 Lake Park',\r\n            status: 'In Progress'\r\n        }\r\n    ],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nfunction project(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_PROJECT_WORKING_TIME:\r\n            return {\r\n                ...state,\r\n                currentProject: {\r\n                    ...state.currentProject,\r\n                    timeTracks: state.currentProject.timeTracks.concat(action.workingTime),\r\n                    totalWorkingHours: state.currentProject.totalWorkingHours + parseInt(action.workingTime.workingTime)\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default project;","import { combineReducers } from 'redux'\r\n\r\nimport customer from './customer';\r\nimport project from './project';\r\n\r\n\r\nexport default combineReducers({\r\n    customer,\r\n    project\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nvar dev = false;\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    {},\r\n    dev ? \r\n        compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) :\r\n        applyMiddleware(thunk)\r\n\r\n);","import React from 'react';\r\nimport { Typography, Menu } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport './SiderMenu.css'\r\n\r\nconst { Title } = Typography;\r\n\r\nclass SiderMenu extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sider-menu\">\r\n                <div className=\"sider-header-logo\">\r\n                    <Link to=\"/\">\r\n                        <Title id=\"sider-header-title\" level={2}>Craftsman</Title>\r\n                    </Link>\r\n                </div>\r\n\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} defaultOpenKeys={['1']}>\r\n                    <Menu.Item key=\"1\">\r\n                        <Link to=\"/\">Dashboard</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Link to=\"/customer\">Kunden</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\">\r\n                        <Link to=\"/project\">Projekte</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\">\r\n                        <Link to=\"/employee\">Mitarbeiter</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SiderMenu;","import React from 'react';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nimport './AppHeader.css'\r\n\r\nclass AppHeader extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header-avatar\">\r\n                <Avatar size=\"large\" icon={<UserOutlined />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppHeader;","\r\nimport { FETCH_CUSTOMERS_START, FETCH_CUSTOMERS_SUCCESS, FETCH_CUSTOMERS_ERROR, SET_CURRENT_CUSTOMER, TOGGLE_CUSTOMER_CHANGE } from './../constants/actionTypes';\r\n\r\nexport function toggleCustomerChange() {\r\n    return {\r\n        type: TOGGLE_CUSTOMER_CHANGE\r\n    }\r\n};\r\n\r\nexport function setCurrentCustomer(customer) {\r\n    return {\r\n        type: SET_CURRENT_CUSTOMER,\r\n        customer: customer\r\n    }\r\n};\r\n\r\nfunction fetchCustomersLoading(payload) {\r\n    return {\r\n        type: FETCH_CUSTOMERS_START\r\n    }\r\n};\r\n\r\nfunction fetchCustomersSuccess(customers) {\r\n    return {\r\n        type: FETCH_CUSTOMERS_SUCCESS,\r\n        customers: customers\r\n    }\r\n};\r\n\r\nfunction fetchCustomersError(error) {\r\n    return {\r\n        type: FETCH_CUSTOMERS_ERROR,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport function fetchCustomers() {\r\n    return (dispatch) => {\r\n        dispatch(fetchCustomersLoading());\r\n        fetch('http://localhost:8080/customer')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n\r\n                var customers = [];\r\n\r\n                res.forEach(function (customer, index) {\r\n                    customers.push({\r\n                        id: customer.id,\r\n                        name: customer.name,\r\n                        firstName: customer.firstName,\r\n                        phoneNumber: customer.phoneNumber,\r\n                        email: customer.email\r\n                    });\r\n                });\r\n\r\n                dispatch(fetchCustomersSuccess(customers));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCustomersError(error));\r\n                console.log(error);\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '30%',\r\n  height: '30%'\r\n};\r\n\r\nexport class GoogleMapContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={14}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n         lat: -1.2884,\r\n         lng: 36.8233\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCw5tKHMaqLm9U7mYGTBKG9HH69vo6uNzQ'\r\n})(GoogleMapContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col } from 'antd';\r\nimport GoogleMapContainer from '../GoogleMapContainer/GoogleMapContainer';\r\n\r\nclass ProjectGeneralInfo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'table', width: '100%' }}>\r\n                <div style={{ width: '50%', display: 'table-cell' }}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <Row>\r\n                                Name:\r\n                            </Row>\r\n                            {this.props.customer.firstName ? <Row> Vorname: </Row> : null}\r\n                            <Row>\r\n                                Adresse:\r\n                            </Row>\r\n                            <Row>\r\n                                Telefon Nummer:\r\n                            </Row>\r\n                            <Row>\r\n                                Email:\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={16}>\r\n                            <Row>\r\n                                {this.props.customer.name}\r\n                            </Row>\r\n                            {this.props.customer.firstName ? <Row> {this.props.customer.firstName} </Row> : null}\r\n                            <Row>\r\n                                {this.props.customer.firstName}\r\n                            </Row>\r\n                            <Row>\r\n                                {this.props.customer.street}\r\n                            </Row>\r\n                            <Row>\r\n                                {this.props.customer.phone}\r\n                            </Row>\r\n                            <Row>\r\n                                {this.props.customer.email}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div style={{ width: '50%', display: 'table-cell' }} >\r\n                    <GoogleMapContainer />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customer: state.customer.currentCustomer,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ProjectGeneralInfo);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs, Table, PageHeader, Descriptions } from 'antd';\r\nimport { fetchCustomers, setCurrentCustomer, toggleCustomerChange } from '../../actions/customer';\r\n\r\nimport './Customer.css';\r\nimport CustomerGeneralInfo from './../../components/CustomerGeneralInfo.js/CustomerGeneralInfo';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Project Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Description',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n    }\r\n];\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        name: 'Project 1',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park'\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Project 2',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park'\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Project 4',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park'\r\n    },\r\n];\r\n\r\n\r\nclass Customer extends React.Component {\r\n\r\n    onListItemClick = (customer) => {\r\n        this.props.dispatch(setCurrentCustomer(customer));\r\n    }\r\n\r\n    onChangButtonClick = () => {\r\n        this.props.dispatch(toggleCustomerChange());\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PageHeader\r\n                    onBack={() => window.history.back()}\r\n                    title={this.props.customer.name}\r\n                    subTitle={this.props.customer.id}\r\n                    style={{ padding: '16px 0px' }}\r\n                >\r\n                </PageHeader>\r\n\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"Allgemeine Informationen\" key=\"1\">\r\n                        <CustomerGeneralInfo/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Offene Projekte\" key=\"2\">\r\n                        <Table columns={columns} dataSource={data} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Notizen\" key=\"3\">\r\n\r\n                    </TabPane>\r\n                </Tabs>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customer: state.customer.currentCustomer,\r\n    error: state.customer.error,\r\n    changeMode: state.customer.changeMode\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Customer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography, Divider, Row, Col } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\n\r\nclass ProjectGeneralInfo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Title level={2}>{this.props.currentProject.name}</Title>\r\n\r\n                <Row>\r\n                    <Col span={3}>\r\n                        <Text strong>Project Id:</Text>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        {this.props.currentProject.id}\r\n                    </Col>\r\n                    <Col span={3}>\r\n                        <Text strong>External Project Id:</Text>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                    {this.props.currentProject.externalId}\r\n                    </Col>\r\n                    <Col span={3}>\r\n                        <Text strong>Description:</Text>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                    {this.props.currentProject.description}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentProject: state.project.currentProject\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ProjectGeneralInfo);","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n    name: 'file',\r\n    multiple: true,\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    onChange(info) {\r\n        const { status } = info.file;\r\n        if (status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n        }\r\n        if (status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully.`);\r\n        } else if (status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    },\r\n};\r\n\r\nclass ProjectImages extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Dragger {...props}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                        band files\r\n                    </p>\r\n                </Dragger>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectImages;","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nclass TimeTrackModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    state = { visible: false };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button type=\"primary\" onClick={this.showModal}>\r\n                    Open Modal\r\n                </Button>\r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimeTrackModal;","import { SET_PROJECT_WORKING_TIME } from \"../constants/actionTypes\";\r\n\r\nexport function setWorkingTime(workingTime) {\r\n    return {\r\n        type: SET_PROJECT_WORKING_TIME,\r\n        workingTime: workingTime\r\n    }\r\n};","import React from 'react';\r\nimport { Row, Col, PageHeader, Button, Statistic, Tag, Descriptions, Tabs, Input, Table, Modal, Form, InputNumber, AutoComplete } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport projectImage from '../../images/project_image.jpg';\r\n\r\nimport './Project.css'\r\nimport ProjectGeneralInfo from '../../components/ProjectGeneralInfo';\r\nimport ProjectImages from '../../components/ProjectImages';\r\nimport TimeTrackModal from '../../components/TimeTrackModal/TimeTrackModal';\r\n\r\nimport { setWorkingTime } from './../../actions/project';\r\n\r\nconst { TextArea } = Input;\r\nconst { TabPane } = Tabs;\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Employee',\r\n        dataIndex: 'employee',\r\n        key: 'employee',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Working Time',\r\n        dataIndex: 'workingTime',\r\n        key: 'workingTime',\r\n        render: text => <div>{text} h</div>,\r\n    },\r\n    {\r\n        title: 'Note',\r\n        dataIndex: 'note',\r\n        key: 'note',\r\n    }\r\n];\r\n\r\nconst options = [\r\n    { value: 'John Doe' },\r\n    { value: 'Max Mustermann' },\r\n    { value: 'Test User1' },\r\n];\r\n\r\nconst layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 6, span: 18 },\r\n};\r\n\r\n\r\nclass Project extends React.Component {\r\n\r\n    state = { visible: false };\r\n\r\n    componentDidMount() {\r\n        let projectId = this.props.match.params.id;\r\n        // Redux set current Project values right\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = formValues => {\r\n        var timeTrack = {\r\n            id: \"\",\r\n            employee: formValues.employee,\r\n            workingTime: formValues.Duration,\r\n            note: formValues.note\r\n        }\r\n        this.props.dispatch(setWorkingTime(timeTrack))\r\n\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Add new working time\"\r\n                    visible={this.state.visible}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"timeTrackForm\"\r\n                        onFinish={this.handleOk}\r\n                        onFinishFailed={() => { }}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Employee\"\r\n                            name=\"employee\"\r\n                            rules={[{ required: true, message: 'Please specify Employee name' }]}\r\n                        >\r\n                            <AutoComplete\r\n                                options={options}\r\n                                placeholder=\"Search for employee\"\r\n                                filterOption={(inputValue, option) =>\r\n                                    option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                                }\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Duration\"\r\n                            name=\"Duration\"\r\n                            rules={[{ required: true, message: 'Please set Working Time duration' }, { type: 'number' }]}\r\n                        >\r\n                            <InputNumber min={0} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Note\"\r\n                            name=\"note\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                            <Button style={{ \"margin-left\": '8px' }} onClick={this.handleCancel}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                <PageHeader\r\n                    onBack={() => window.history.back()}\r\n                    title={this.props.currentProject.name}\r\n                    tags={<Tag color=\"blue\">In Progress</Tag>}\r\n                    subTitle={this.props.currentProject.id}\r\n                    extra={\r\n                        <Button type=\"primary\" onClick={() => this.showModal()}>\r\n                            Arbeitszeit erfassen\r\n                        </Button>\r\n                    }\r\n                    style={{ padding: '16px 0px' }}\r\n                >\r\n\r\n                    <Row>\r\n                        <Col span={4}>\r\n                            <img src={projectImage} className=\"project-image\" alt=\"\" />\r\n                        </Col>\r\n                        <Col span={16}>\r\n                            <Descriptions size=\"small\" column={3}>\r\n                                <Descriptions.Item label=\"Kontaktperson\">Marc-Robin Dück</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Geplantes Start Datum\">2017-01-10</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Effektives Start Datum\">2017-10-10</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Telefonnummer\">004919879327498</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Statistic title=\"Total working hours\" suffix=\"h\" value={this.props.currentProject.totalWorkingHours} />\r\n                        </Col>\r\n                    </Row>\r\n                </PageHeader>\r\n\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"Allgemeine Informationen\" key=\"1\">\r\n                        <ProjectGeneralInfo />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Verantwortliche Mitarbeiter\" key=\"2\">\r\n                        \r\n                    </TabPane>\r\n                    <TabPane tab=\"Zeiterfassung\" key=\"3\">\r\n                        <Table columns={columns} dataSource={this.props.currentProject.timeTracks} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Bilder\" key=\"4\">\r\n                        <ProjectImages />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Geräte\" key=\"5\">\r\n                        \r\n                    </TabPane>\r\n                    <TabPane tab=\"Notizen\" key=\"6\">\r\n                        <TextArea rows={4} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentProject: state.project.currentProject\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Project);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Id',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n    },\r\n    {\r\n        title: 'Projekt',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: (text, record, index) => <Link to={`/project/${record.id}`}>{text}</Link>\r\n    },\r\n    {\r\n        title: 'Kunde',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n    },\r\n    {\r\n        title: 'Adresse',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n    }\r\n];\r\n\r\nclass ProjectList extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Table columns={columns} dataSource={this.props.projects} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projects: state.project.projects\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ProjectList);\r\n","import React from 'react';\r\nimport { Row, Col, Card, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                {/* <Title level={2}>Dashboard Overview</Title> */}\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Card title=\"Total Income\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                            <Title level={2}>{3000} €</Title>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Total Working Hours\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                        <Title level={2}>{500} h</Title>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Open Projects\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                        <Title level={2}>{9}</Title>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Open Requests\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                        <Title level={2}>{4}</Title>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Id',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: (text, record, index) => <Link to={`/customer/${record.id}`}>{text}</Link>\r\n    },\r\n    {\r\n        title: 'Vorname',\r\n        dataIndex: 'firstName',\r\n        key: 'firstName',\r\n    },\r\n    {\r\n        title: 'Adresse',\r\n        dataIndex: 'street',\r\n        key: 'street',\r\n    },\r\n    {\r\n        title: 'Telefonnummer',\r\n        dataIndex: 'phone',\r\n        key: 'phone',\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n    }\r\n];\r\n\r\nclass CustomerList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table columns={columns} dataSource={this.props.customers} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    customers: state.customer.customers\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(CustomerList);","import React from 'react';\nimport { Layout } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport SiderMenu from './components/SiderMenu';\nimport AppHeader from './components/AppHeader';\nimport Customer from './pages/Customer/Customer';\nimport Project from './pages/Project/Project';\nimport ProjectList from './pages/Project/ProjectList';\nimport Dashboard from './pages/Dashboard';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport CustomerList from './pages/Customer/CustomerList';\n\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Layout>\n            <Sider className=\"sider\">\n              <SiderMenu />\n            </Sider>\n            <Layout>\n              <Header className=\"header\">\n                <AppHeader />\n              </Header>\n\n              <Content className=\"content\">\n\n                <Switch>\n                  <Route exact path=\"/\">\n                    <Dashboard />\n                  </Route>\n                  <Route exact path=\"/customer\" component={CustomerList}/>\n                  <Route exact path=\"/customer/:id\" component={Customer}/>\n                  <Route exact path=\"/project\" component={ProjectList}/>\n                  <Route exact path=\"/project/:id\" component={Project}/>\n                </Switch>\n\n              </Content>\n\n              <Footer className=\"footer\">\n                Craftsman @ 2020 Created by BuehrerDueck\n          </Footer>\n            </Layout>\n          </Layout>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}