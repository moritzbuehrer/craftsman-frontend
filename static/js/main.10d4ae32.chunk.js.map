{"version":3,"sources":["images/project_image.jpg","reducers/customer.js","constants/actionTypes.js","reducers/index.js","store/index.js","components/SiderMenu.js","components/AppHeader.js","pages/Customer/Customer.js","actions/customer.js","components/ProjectGeneralInfo.js","components/ProjectImages.js","pages/Project/Project.js","pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","currentCustomer","firstName","lastName","customers","loading","error","changeMode","customer","state","action","type","id","name","phoneNumber","email","combineReducers","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Title","Typography","SiderMenu","className","to","level","theme","defaultSelectedKeys","defaultOpenKeys","Item","key","React","Component","AppHeader","size","icon","UserOutlined","Text","antIcon","LoadingOutlined","style","fontSize","spin","Customer","props","onFilterValueChange","filterValue","allCustomers","filteredCustomers","filter","toLowerCase","includes","setState","onListItemClick","dispatch","setCurrentCustomer","onChangButtonClick","this","fetch","then","res","json","forEach","index","push","fetchCustomersSuccess","catch","fetchCustomersError","console","log","indicator","span","header","placeholder","bordered","onChange","e","target","value","dataSource","renderItem","onClick","height","padding","margin","width","danger","float","strong","defaultValue","connect","ProjectGeneralInfo","orientation","Dragger","Upload","multiple","info","status","file","fileList","message","success","ProjectImages","InboxOutlined","TextArea","Input","TabPane","Tabs","Project","onBack","history","back","title","tags","color","subTitle","extra","src","projectImage","alt","column","label","suffix","defaultActiveKey","tab","rows","Dashboard","textAlign","Header","Layout","Footer","Sider","Content","App","store","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10d4ae32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/project_image.9d8a7c9c.jpg\";","\r\nimport { FETCH_CUSTOMERS_START, FETCH_CUSTOMERS_SUCCESS, FETCH_CUSTOMERS_ERROR, SET_CURRENT_CUSTOMER, TOGGLE_CUSTOMER_CHANGE } from './../constants/actionTypes';\r\n\r\nconst initialState = {\r\n    currentCustomer: {\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    },\r\n    customers: [],\r\n    loading: false,\r\n    error: null,\r\n    changeMode: false\r\n};\r\n\r\nfunction customer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case FETCH_CUSTOMERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CUSTOMERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                customers: action.customers\r\n            }\r\n        case FETCH_CUSTOMERS_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case SET_CURRENT_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                currentCustomer: {\r\n                    id: action.customer.id,\r\n                    firstName: action.customer.firstName,\r\n                    lastName: action.customer.name,\r\n                    phoneNumber: action.customer.phoneNumber,\r\n                    email: action.customer.email\r\n                }\r\n            }\r\n        case TOGGLE_CUSTOMER_CHANGE:\r\n            return {\r\n                ...state,\r\n                changeMode: !state.changeMode\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default customer;","export const FETCH_CUSTOMERS_START = 'FETCH_CUSTOMERS_START';\r\nexport const FETCH_CUSTOMERS_SUCCESS = 'FETCH_CUSTOMERS_SUCCESS';\r\nexport const FETCH_CUSTOMERS_ERROR = 'FETCH_CUSTOMERS_ERROR';\r\nexport const SET_CURRENT_CUSTOMER = 'SET_CURRENT_CUSTOMER';\r\nexport const TOGGLE_CUSTOMER_CHANGE = 'TOGGLE_CUSTOMER_CHANGE';","import { combineReducers } from 'redux'\r\n\r\nimport customer from './customer';\r\n\r\n\r\nexport default combineReducers({\r\n    customer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\n\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    {},\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);","import React from 'react';\r\nimport { Typography, Menu } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport './SiderMenu.css'\r\n\r\nconst { Title } = Typography;\r\n\r\nclass SiderMenu extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sider-menu\">\r\n                <div className=\"sider-header-logo\">\r\n                    <Link to=\"/\">\r\n                        <Title id=\"sider-header-title\" level={2}>Craftsman</Title>\r\n                    </Link>\r\n                </div>\r\n\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} defaultOpenKeys={['1']}>\r\n                    <Menu.Item key=\"1\">\r\n                        <Link to=\"/\">Dashboard</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Link to=\"/customer\">Customers</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\">\r\n                        <Link to=\"/project\">Projects</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\">\r\n                        <Link to=\"/employee\">Employees</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SiderMenu;","import React from 'react';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nimport './AppHeader.css'\r\n\r\nclass AppHeader extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header-avatar\">\r\n                <Avatar size=\"large\" icon={<UserOutlined />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Input, List, Button, Spin, Typography } from 'antd';\r\nimport { fetchCustomers, setCurrentCustomer, toggleCustomerChange } from '../../actions/customer';\r\n\r\nimport './Customer.css';\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nconst { Text } = Typography;\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 50 }} spin />;\r\n\r\nclass Customer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredCustomers: this.props.customers\r\n        }\r\n    }\r\n\r\n    onFilterValueChange = (filterValue) => {\r\n        var allCustomers = this.props.customers;\r\n        if (allCustomers) {\r\n            var filteredCustomers = allCustomers.filter((customer) => {\r\n                let combinedName = customer.firstName.toLowerCase() + customer.name.toLowerCase();\r\n                return combinedName.includes(filterValue);\r\n            })\r\n        }\r\n        this.setState({\r\n            filteredCustomers: filteredCustomers\r\n        });\r\n    }\r\n\r\n    onListItemClick = (customer) => {\r\n        this.props.dispatch(setCurrentCustomer(customer));\r\n    }\r\n\r\n    onChangButtonClick = () => {\r\n        this.props.dispatch(toggleCustomerChange());\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchCustomers());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {this.props.loading ? <Spin indicator={antIcon} /> : null}\r\n\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <List\r\n                            header={\r\n                                <Input placeholder=\"Search Customers\" bordered={false} onChange={(e) => this.onFilterValueChange(e.target.value)} />\r\n                            }\r\n                            size=\"large\"\r\n                            bordered\r\n                            dataSource={this.props.customers} // \r\n                            renderItem={customer => <List.Item onClick={() => this.onListItemClick(customer)} className=\"customer-list-item\">{customer.firstName + \" \" + customer.name}</List.Item>}\r\n                        />\r\n\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Row style={{ height: '62.6px', padding: '15px' }}>\r\n                            <Col span={12}>\r\n                                <Button onClick={() => this.onChangButtonClick()} style={{ margin: '0px 5px 0px 5px', width: '80px' }}>{this.props.changeMode ? 'Save' : 'Change'}</Button>\r\n                                <Button type=\"primary\" danger>Delete</Button>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Button type=\"primary\" style={{ float: \"right\" }}>Add new Customer</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24} style={{ margin: '0px 0px 0px 20px' }}>\r\n                                <Row>\r\n                                    <Text strong>Customer Id:</Text>\r\n                                    {this.props.currentCustomer.id}\r\n                                </Row>\r\n                                <Row>\r\n                                    <Text strong>First Name:</Text>\r\n                                    {this.props.changeMode ? <Input defaultValue={this.props.currentCustomer.firstName} /> : this.props.currentCustomer.firstName}\r\n                                </Row>\r\n                                <Row>\r\n                                    <Text strong>Last Name:</Text>\r\n                                    {this.props.changeMode ? <Input defaultValue={this.props.currentCustomer.lastName} /> : this.props.currentCustomer.lastName}\r\n                                </Row>\r\n                                <Row>\r\n                                    <Text strong>Phone Number:</Text>\r\n                                    {this.props.changeMode ? <Input defaultValue={this.props.currentCustomer.phoneNumber} /> : this.props.currentCustomer.phoneNumber}\r\n                                </Row>\r\n                                <Row>\r\n                                    <Text strong>Email:</Text>\r\n                                    {this.props.changeMode ? <Input defaultValue={this.props.currentCustomer.email} /> : this.props.currentCustomer.email}\r\n                                </Row>\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentCustomer: state.customer.currentCustomer,\r\n    customers: state.customer.customers,\r\n    loading: state.customer.loading,\r\n    error: state.customer.error,\r\n    changeMode: state.customer.changeMode\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Customer);\r\n\r\n\r\n\r\n","\r\nimport { FETCH_CUSTOMERS_START, FETCH_CUSTOMERS_SUCCESS, FETCH_CUSTOMERS_ERROR, SET_CURRENT_CUSTOMER, TOGGLE_CUSTOMER_CHANGE } from './../constants/actionTypes';\r\n\r\nexport function toggleCustomerChange() {\r\n    return {\r\n        type: TOGGLE_CUSTOMER_CHANGE\r\n    }\r\n};\r\n\r\nexport function setCurrentCustomer(customer) {\r\n    return {\r\n        type: SET_CURRENT_CUSTOMER,\r\n        customer: customer\r\n    }\r\n};\r\n\r\nfunction fetchCustomersLoading(payload) {\r\n    return {\r\n        type: FETCH_CUSTOMERS_START\r\n    }\r\n};\r\n\r\nfunction fetchCustomersSuccess(customers) {\r\n    return {\r\n        type: FETCH_CUSTOMERS_SUCCESS,\r\n        customers: customers\r\n    }\r\n};\r\n\r\nfunction fetchCustomersError(error) {\r\n    return {\r\n        type: FETCH_CUSTOMERS_ERROR,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport function fetchCustomers() {\r\n    return (dispatch) => {\r\n        dispatch(fetchCustomersLoading());\r\n        fetch('http://localhost:8080/customer')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n\r\n                var customers = [];\r\n\r\n                res.forEach(function (customer, index) {\r\n                    customers.push({\r\n                        id: customer.id,\r\n                        name: customer.name,\r\n                        firstName: customer.firstName,\r\n                        phoneNumber: customer.phoneNumber,\r\n                        email: customer.email\r\n                    });\r\n                });\r\n\r\n                dispatch(fetchCustomersSuccess(customers));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCustomersError(error));\r\n                console.log(error);\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport { Typography, Divider, Row, Col } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\n\r\nclass ProjectGeneralInfo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Title level={2}>Kernsanierung</Title>\r\n\r\n                <Row>\r\n                    <Col span={3}>\r\n                        <Text strong>Project Id:</Text>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        123456789\r\n                    </Col>\r\n                    <Col span={3}>\r\n                        <Text strong>External Project Id:</Text>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        987654321\r\n                    </Col>\r\n                    <Col span={3}>\r\n                        <Text strong>Description:</Text>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Divider orientation=\"left\">Further Details</Divider>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectGeneralInfo;","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n    name: 'file',\r\n    multiple: true,\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    onChange(info) {\r\n        const { status } = info.file;\r\n        if (status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n        }\r\n        if (status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully.`);\r\n        } else if (status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    },\r\n};\r\n\r\nclass ProjectImages extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Dragger {...props}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                        band files\r\n                    </p>\r\n                </Dragger>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectImages;","import React from 'react';\r\nimport { Row, Col, PageHeader, Button, Statistic, Tag, Descriptions, Tabs, Input } from 'antd';\r\n\r\nimport projectImage from '../../images/project_image.jpg';\r\n\r\nimport './Project.css'\r\nimport ProjectGeneralInfo from '../../components/ProjectGeneralInfo';\r\nimport ProjectImages from '../../components/ProjectImages';\r\n\r\nconst { TextArea } = Input;\r\nconst { TabPane } = Tabs;\r\n\r\nclass Project extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PageHeader\r\n                    onBack={() => window.history.back()}\r\n                    title=\"Kernsanierung\"\r\n                    tags={<Tag color=\"blue\">In Progress</Tag>}\r\n                    subTitle=\"2020-03-0001\"\r\n                    extra={\r\n                        <Button type=\"primary\">\r\n                            Add Workin Hours\r\n                        </Button>\r\n                    }\r\n                >\r\n\r\n                    <Row>\r\n                        <Col span={4}>\r\n                            <img src={projectImage} className=\"project-image\" alt=\"\" />\r\n                        </Col>\r\n                        <Col span={16}>\r\n                            <Descriptions size=\"small\" column={3}>\r\n                                <Descriptions.Item label=\"Contact Person\">Marc-Robin Dück</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Start Date\">2017-01-10</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Statistic title=\"Total working hours\" suffix=\"h\" value={330} />\r\n                        </Col>\r\n                    </Row>\r\n                </PageHeader>\r\n\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"General Information\" key=\"1\">\r\n                        <ProjectGeneralInfo/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Working hours\" key=\"2\">\r\n                        Content of Tab Pane 2\r\n                    </TabPane>\r\n                    <TabPane tab=\"Images\" key=\"3\">\r\n                        <ProjectImages/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Notes\" key=\"4\">\r\n                    <TextArea rows={4} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Row, Col, Card, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                {/* <Title level={2}>Dashboard Overview</Title> */}\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Card title=\"Total Income\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                            <Title level={2}>{3000} €</Title>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Total Working Hours\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                        <Title level={2}>{500} h</Title>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Open Projects\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                        <Title level={2}>{9}</Title>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Open Requests\" style={{ margin: '10px', textAlign: \"center\" }}>\r\n                        <Title level={2}>{4}</Title>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { Layout } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport SiderMenu from './components/SiderMenu';\nimport AppHeader from './components/AppHeader';\nimport Customer from './pages/Customer/Customer';\nimport Project from './pages/Project/Project';\nimport Dashboard from './pages/Dashboard';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Layout>\n            <Sider className=\"sider\">\n              <SiderMenu />\n            </Sider>\n            <Layout>\n              <Header className=\"header\">\n                <AppHeader />\n              </Header>\n\n              <Content className=\"content\">\n\n                <Switch>\n                  <Route exact path=\"/\">\n                    <Dashboard />\n                  </Route>\n                  <Route path=\"/customer\">\n                    <Customer />\n                  </Route>\n                  <Route path=\"/project\">\n                    <Project />\n                  </Route>\n                </Switch>\n\n              </Content>\n\n              <Footer className=\"footer\">\n                Craftsman @ 2020 Created by BuehrerDueck\n          </Footer>\n            </Layout>\n          </Layout>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}